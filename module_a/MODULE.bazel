module(name = "module_a")

# extension_1 = use_extension("//:extensions.bzl", "extension_1")
# ```
# $ (cd module_a; bazel fetch @extension_1//:defs.bzl)
# ERROR: Circular definition of repositories generated by module extensions and/or .bzl files:
# .-> @_main~extension_1~extension_1
# |   extension 'extension_1' defined in //:extensions.bzl
# |   //:extensions.bzl
# |   //:extension_2.bzl
# |   @_main~extension_1~extension_1//:defs.bzl
# `-- @_main~extension_1~extension_1
# ERROR: cycles detected during target parsing
# ```

extension_1 = use_extension("//:extension_1.bzl", "extension_1")

extension_1.tag(name = "module_a_tag_1")
extension_1.tag(name = "module_a_tag_2")
use_repo(extension_1, "extension_1")
